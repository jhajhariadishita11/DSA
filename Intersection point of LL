/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int length(ListNode*head){
        int count =0;
        while(head!=NULL){
            head=head->next;
            count++;
        }
        return count;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode*temp1=headA;
        ListNode*temp2=headB;
        int count1=length(headA);
        int count2=length(headB);
        int diff=abs(count1-count2);
        if(count1>count2){
            for(int i=0;i<diff;i++){
                temp1=temp1->next;
            }
        }else{
             for(int i=0;i<diff;i++){
                temp2=temp2->next;
        }}
        while(temp1!=temp2&&temp1!=NULL&&temp2!=NULL){
            temp1=temp1->next;
            temp2=temp2->next;
        }
        return temp1;
        
    }
};
